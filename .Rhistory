install.packages("knitr")
install.packages("kableExtra")
install.packages("tidyverse")
install.packages("stringr")
install.packages("ggplot2")
# Starberries' grown place :)
state_all <- strawberry |> distinct(State)
strawberry <- read_csv("Desktop/Midterm_Project/strawb_mar6.csv",
col_names = TRUE,  show_col_types = FALSE)
souce(my_function.R)
soucre(my_function.R)
source(my_function.R)
#| label: read data - glimpse
strawberry <- read_csv("strawb_mar6.csv",
col_names = TRUE,
show_col_types = FALSE)
source(my_function.R)
strawberry <- read.csv("Desktop/Midterm_Project/strawb_mar6.csv",
col_names = TRUE,  show_col_types = FALSE)
strawberry <- read.csv("Desktop/Midterm_Project/strawb_mar6.csv", header = TRUE)
strawberry <- read.csv("Desktop/Midterm_Project/strawb_mar6.csv", header = TRUE)
strawberry <- read.csv("Desktop/Midterm_Project/strawb_mar6.csv", header = TRUE)
strawberry <- read.csv("strawb_mar6.csv", header = TRUE)
strawberry <- read_csv("strawb_mar6.csv", header = TRUE)
library(knitr)
library(kableExtra)
library(tidyverse)
library(stringr)
strawberry <- read_csv("strawb_mar6.csv", header = TRUE)
strawberry <- read_csv("strawb_mar6.csv", col_names = TRUE, show_col_types = FALSE)
View(strawberry)
# assume data is a tibble
# n_show is the number of rows to show
show_unique <- function(data, nrows=10 ){
# make a tibble items to hold the data to show
# browser()
a <- nrows * dim(data)[2]  # number of cells in items
items <- rep(" ", a) # items will coerce everything to char
dim(items) <- c(nrows ,dim(data)[2]) # shape items
items <- as_tibble(items)
colnames(items) <- colnames(data)
# browser()
for(i in 1:dim(data)[2]){
col_items <- unique(data[,i])
# row_ex is the number of rows needed
# to make the column length conformable with items
row_ex <- nrows - dim(col_items)[1]
if(row_ex >= 0){
ex_rows <- tibble(rep(" ",row_ex))
colnames(ex_rows) <- colnames(col_items)
col_add <- rbind2(col_items, ex_rows)
} else if(row_ex < 0){
col_add <- col_items[1:10,]
}
items[,i] <- col_add
}
return(items)
}
#|label: split strawb into census and survey pieces
strw_census <- strawb |> filter(Program == "CENSUS")
strawb <- strawberry |> drop_one_value_col()
strawb <- strawberry |> drop_one_value_col()
library(knitr)
library(kableExtra)
library(tidyverse)
library(stringr)
strawb <- strawberry |> drop_one_value_col()
#| label: read data - glimpse
strawberry <- read_csv("strawb_mar6.csv",
col_names = TRUE,
show_col_types = FALSE)
source("my_functions.R")
strawb <- strawberry |> drop_one_value_col()
#| label: explore strawb data
# assume data is a tibble
# n_show is the number of rows to show
show_unique <- function(data, nrows=10 ){
# make a tibble items to hold the data to show
# browser()
a <- nrows * dim(data)[2]  # number of cells in items
items <- rep(" ", a) # items will coerce everything to char
dim(items) <- c(nrows ,dim(data)[2]) # shape items
items <- as_tibble(items)
colnames(items) <- colnames(data)
# browser()
for(i in 1:dim(data)[2]){
col_items <- unique(data[,i])
# row_ex is the number of rows needed
# to make the column length conformable with items
row_ex <- nrows - dim(col_items)[1]
if(row_ex >= 0){
ex_rows <- tibble(rep(" ",row_ex))
colnames(ex_rows) <- colnames(col_items)
col_add <- rbind2(col_items, ex_rows)
} else if(row_ex < 0){
col_add <- col_items[1:10,]
}
items[,i] <- col_add
}
return(items)
}
## test <- show_unique(strawb, 10)
#|label: split strawb into census and survey pieces
strw_census <- strawb |> filter(Program == "CENSUS")
strw_survey <- strawb |> filter(Program == "SURVEY")
nrow(strawb) == (nrow(strw_census) + nrow(strw_survey))
#| label: examine Census and survey tibbles
#| warning: false
s_census <- strw_census |> drop_one_value_col(prt_val = TRUE)
s_survey <- strw_survey |> drop_one_value_col(prt_val = TRUE)
unique_sur <- s_survey |> show_unique(nrows = 10)
unique_cen <- s_census |> show_unique(nrows = 10)
strw_census <- s_census |> select(-`State ANSI`)
strw_survey <- s_survey |> select(-`State ANSI`, -`Week Ending`, -Period)
rm(s_census, s_survey, strawberry, strawb, items)
#| label: work on Census columns
commod <- strw_census$Commodity |> unique()
#### split Data Item
strw_census <- strw_census |>
separate_wider_delim(  cols = Commodity,
delim = ",",
names = c("INCOME",
"NET CASH FARM",
"STRAW"
),
too_many = "error",
names_sep = " ",
too_few = "align_start"
)
inc <- strw_census$Fruit |> unique()
strw_census <- strw_census |>
separate_wider_delim(  cols = Fruit,
delim = ",",
names = c("INCOME",
"STRAWB"
),
too_many = "error",
too_few = "align_start"
)
#| label: Assignment shortner results
straw_cen_f <- strw_census |> filter(State == "FLORIDA")
straw_sur_f <- strw_survey |> filter(State == "FLORIDA")
straw_cen_c <- strw_census |> filter(State == "CALIFORNIA")
straw_sur_c <- strw_survey |> filter(State == "CALIFORNIA")
rm(strw_census, strw_survey, unique_cen, unique_sur)
View(straw_cen_c)
View(straw_cen_f)
View(straw_sur_c)
rm(list=ls())
source("~/Desktop/Midterm_Project/415Midtrerm.R")
install.packages("kableExtra")
