x = "State",
y = "Total Value") +
theme_minimal()
ggplot(captan_2023, aes(x = State, y = Value, fill = State)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Category + Item, scales = "free_y") +
labs(title = "Value of Captan Measurement Comparison by State (2023)",
x = "State",
y = "Total Value") +
theme_minimal()
rm(captan_2021,captan_2023)
#Follows the same step as captan
#Filter rows form chemical_CA
thiram_CA <- chemical_CA[str_detect(chemical_CA$`Domain Category`, regex("thiram", ignore_case = TRUE)), ]
# Filter rows from chemical_FL
thiram_FL <- chemical_FL[str_detect(chemical_FL$`Domain Category`, regex("thiram", ignore_case = TRUE)), ]
#Get the thiram information data and gather them into one data set
thiram_combined <- rbind(thiram_CA, thiram_FL)
#remove intermediate data set
rm(thiram_CA)
rm(thiram_FL)
#Table of Comparison of different year by same state
captan <- captan_combined |> group_by(Category, Item, State, Year) |> count(Value)
print(captan)
#Rearrange the data for bar chart
thiram_2021 <- thiram[str_detect(thiram$Year, regex("2021", ignore_case = TRUE)), ]
#Follows the same step as captan
#Filter rows form chemical_CA
thiram_CA <- chemical_CA[str_detect(chemical_CA$`Domain Category`, regex("thiram", ignore_case = TRUE)), ]
# Filter rows from chemical_FL
thiram_FL <- chemical_FL[str_detect(chemical_FL$`Domain Category`, regex("thiram", ignore_case = TRUE)), ]
#Get the thiram information data and gather them into one data set
thiram_combined <- rbind(thiram_CA, thiram_FL)
#remove intermediate data set
rm(thiram_CA)
rm(thiram_FL)
#Table of Comparison of different year by same state
thiram <- thiram_combined |> group_by(Category, Item, State, Year) |> count(Value)
print(thiram)
#Rearrange the data for bar chart
thiram_2021 <- thiram[str_detect(thiram$Year, regex("2021", ignore_case = TRUE)), ]
thiram_2023 <- thiram[str_detect(thiram$Year, regex("2023", ignore_case = TRUE)), ]
ggplot(thiram_2021, aes(x = State, y = Value, fill = State)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Category + Item, scales = "free_y") +
labs(title = "Total Value by State (2021)",
x = "State",
y = "Total Value") +
theme_minimal()
ggplot(thiram_2023, aes(x = State, y = Value, fill = State)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Category + Item, scales = "free_y") +
labs(title = "Total Value by State (2023)",
x = "State",
y = "Total Value") +
theme_minimal()
# Remove intermediate data set
rm(thiram_2021,thiram_2023)
#Follows the same step as captan
#Filter rows form chemical_CA
thiram_CA <- chemical_CA[str_detect(chemical_CA$`Domain Category`, regex("thiram", ignore_case = TRUE)), ]
# Filter rows from chemical_FL
thiram_FL <- chemical_FL[str_detect(chemical_FL$`Domain Category`, regex("thiram", ignore_case = TRUE)), ]
#Get the thiram information data and gather them into one data set
thiram_combined <- rbind(thiram_CA, thiram_FL)
#remove intermediate data set
rm(thiram_CA)
rm(thiram_FL)
#Table of Comparison of different year by same state
thiram <- thiram_combined |> group_by(Category, Item, State, Year) |> count(Value)
print(thiram)
#Rearrange the data for bar chart
thiram_2021 <- thiram[str_detect(thiram$Year, regex("2021", ignore_case = TRUE)), ]
thiram_2023 <- thiram[str_detect(thiram$Year, regex("2023", ignore_case = TRUE)), ]
ggplot(thiram_2021, aes(x = State, y = Value, fill = State)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Category + Item, scales = "free_y") +
labs(title = "Value of Thiram Measurement Comparison by State (2021)",
x = "State",
y = "Total Value") +
theme_minimal()
ggplot(thiram_2023, aes(x = State, y = Value, fill = State)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Category + Item, scales = "free_y") +
labs(title = "Value of Thiram Measurement Comparison by State (2023)",
x = "State",
y = "Total Value") +
theme_minimal()
# Remove intermediate data set
rm(thiram_2021,thiram_2023)
#Follows the same step as captan
#Filter rows form chemical_CA
thiram_CA <- chemical_CA[str_detect(chemical_CA$`Domain Category`, regex("thiram", ignore_case = TRUE)), ]
# Filter rows from chemical_FL
thiram_FL <- chemical_FL[str_detect(chemical_FL$`Domain Category`, regex("thiram", ignore_case = TRUE)), ]
#Get the thiram information data and gather them into one data set
thiram_combined <- rbind(thiram_CA, thiram_FL)
#remove intermediate data set
rm(thiram_CA)
rm(thiram_FL)
#Table of Comparison of different year by same state
thiram <- thiram_combined |> group_by(Category, Item, State, Year) |> count(Value)
print(thiram)
#Rearrange the data for bar chart
thiram_2021 <- thiram[str_detect(thiram$Year, regex("2021", ignore_case = TRUE)), ]
thiram_2023 <- thiram[str_detect(thiram$Year, regex("2023", ignore_case = TRUE)), ]
#Same year, same domain category and item, but different state record comparison
ggplot(thiram_2021, aes(x = State, y = Value, fill = State)) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = round(Value, 1)),
position = position_dodge(width = 0.9),
vjust = -0.5, size = 3) +
facet_wrap(~ Category + Item, scales = "fixed") +
labs(title = "Value of Thiram Measurement Comparison by State (2021)",
x = "State",
y = "Total Value") +
theme_minimal(base_size = 13) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
strip.text = element_text(face = "bold")
)
str(thiram_2021)
str(thiram_2021)
#Follows the same step as captan
#Filter rows form chemical_CA
thiram_CA <- chemical_CA[str_detect(chemical_CA$`Domain Category`, regex("thiram", ignore_case = TRUE)), ]
# Filter rows from chemical_FL
thiram_FL <- chemical_FL[str_detect(chemical_FL$`Domain Category`, regex("thiram", ignore_case = TRUE)), ]
#Get the thiram information data and gather them into one data set
thiram_combined <- rbind(thiram_CA, thiram_FL)
#remove intermediate data set
rm(thiram_CA)
rm(thiram_FL)
#Table of Comparison of different year by same state
thiram <- thiram_combined |> group_by(Category, Item, State, Year) |> count(Value)
print(thiram)
#Rearrange the data for bar chart
thiram_2021 <- thiram[str_detect(thiram$Year, regex("2021", ignore_case = TRUE)), ]
thiram_2023 <- thiram[str_detect(thiram$Year, regex("2023", ignore_case = TRUE)), ]
thiram_2021$Value <- as.numeric(gsub(",", "", thiram_2021$Value))
#Same year, same domain category and item, but different state record comparison
ggplot(thiram_2021, aes(x = State, y = Value, fill = State)) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = round(Value, 1)),
position = position_dodge(width = 0.9),
vjust = -0.5, size = 3) +
facet_wrap(~ Category + Item, scales = "fixed") +
labs(title = "Value of Thiram Measurement Comparison by State (2021)",
x = "State",
y = "Total Value") +
theme_minimal(base_size = 13) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
strip.text = element_text(face = "bold")
)
ggplot(thiram_2023, aes(x = State, y = Value, fill = State)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Category + Item, scales = "free_y") +
labs(title = "Value of Thiram Measurement Comparison by State (2023)",
x = "State",
y = "Total Value") +
theme_minimal()
# Remove intermediate data set
rm(thiram_2021,thiram_2023)
#Follows the same step as captan
#Filter rows form chemical_CA
thiram_CA <- chemical_CA[str_detect(chemical_CA$`Domain Category`, regex("thiram", ignore_case = TRUE)), ]
# Filter rows from chemical_FL
thiram_FL <- chemical_FL[str_detect(chemical_FL$`Domain Category`, regex("thiram", ignore_case = TRUE)), ]
#Get the thiram information data and gather them into one data set
thiram_combined <- rbind(thiram_CA, thiram_FL)
#remove intermediate data set
rm(thiram_CA)
rm(thiram_FL)
#Table of Comparison of different year by same state
thiram <- thiram_combined |> group_by(Category, Item, State, Year) |> count(Value)
print(thiram)
#Rearrange the data for bar chart
thiram_2021 <- thiram[str_detect(thiram$Year, regex("2021", ignore_case = TRUE)), ]
thiram_2023 <- thiram[str_detect(thiram$Year, regex("2023", ignore_case = TRUE)), ]
thiram_2021$Value <- as.numeric(gsub(",", "", thiram_2021$Value))
#Same year, same domain category and item, but different state record comparison
ggplot(thiram_2021, aes(x = State, y = Value, fill = State)) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = round(Value, 1)),
position = position_dodge(width = 0.9),
vjust = -0.5, size = 3) +
facet_wrap(~ Category + Item, scales = "fixed") +
labs(title = "Value of Thiram Measurement Comparison by State (2021)",
x = "State",
y = "Total Value") +
theme_minimal(base_size = 13) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
strip.text = element_text(face = "bold")
)
ggplot(thiram_2023, aes(x = State, y = Value, fill = State)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Category + Item, scales = "free_y") +
labs(title = "Value of Thiram Measurement Comparison by State (2023)",
x = "State",
y = "Total Value") +
theme_minimal()
# Remove intermediate data set
rm(thiram_2021,thiram_2023)
#Follows the same step as captan
#Filter rows form chemical_CA
thiram_CA <- chemical_CA[str_detect(chemical_CA$`Domain Category`, regex("thiram", ignore_case = TRUE)), ]
# Filter rows from chemical_FL
thiram_FL <- chemical_FL[str_detect(chemical_FL$`Domain Category`, regex("thiram", ignore_case = TRUE)), ]
#Get the thiram information data and gather them into one data set
thiram_combined <- rbind(thiram_CA, thiram_FL)
#remove intermediate data set
rm(thiram_CA)
rm(thiram_FL)
#Table of Comparison of different year by same state
thiram <- thiram_combined |> group_by(Category, Item, State, Year) |> count(Value)
print(thiram)
#Rearrange the data for bar chart
thiram_2021 <- thiram[str_detect(thiram$Year, regex("2021", ignore_case = TRUE)), ]
thiram_2023 <- thiram[str_detect(thiram$Year, regex("2023", ignore_case = TRUE)), ]
thiram_2021$Value <- as.numeric(gsub(",", "", thiram_2021$Value))
#Same year, same domain category and item, but different state record comparison
ggplot(thiram_2021, aes(x = State, y = Value, fill = State)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Category + Item, scales = "fixed") +
labs(title = "Value of Thiram Measurement Comparison by State (2021)",
x = "State",
y = "Total Value") +
theme_minimal(base_size = 13) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
strip.text = element_text(face = "bold")
)
ggplot(thiram_2023, aes(x = State, y = Value, fill = State)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Category + Item, scales = "free_y") +
labs(title = "Value of Thiram Measurement Comparison by State (2023)",
x = "State",
y = "Total Value") +
theme_minimal()
# Remove intermediate data set
rm(thiram_2021,thiram_2023)
#Follows the same step as captan
#Filter rows form chemical_CA
thiram_CA <- chemical_CA[str_detect(chemical_CA$`Domain Category`, regex("thiram", ignore_case = TRUE)), ]
# Filter rows from chemical_FL
thiram_FL <- chemical_FL[str_detect(chemical_FL$`Domain Category`, regex("thiram", ignore_case = TRUE)), ]
#Get the thiram information data and gather them into one data set
thiram_combined <- rbind(thiram_CA, thiram_FL)
#remove intermediate data set
rm(thiram_CA)
rm(thiram_FL)
#Table of Comparison of different year by same state
thiram <- thiram_combined |> group_by(Category, Item, State, Year) |> count(Value)
print(thiram)
#Rearrange the data for bar chart
thiram_2021 <- thiram[str_detect(thiram$Year, regex("2021", ignore_case = TRUE)), ]
thiram_2023 <- thiram[str_detect(thiram$Year, regex("2023", ignore_case = TRUE)), ]
thiram_2021$Value <- as.numeric(gsub(",", "", thiram_2021$Value))
#Same year, same domain category and item, but different state record comparison
ggplot(thiram_2021, aes(x = State, y = Value, fill = State)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Category + Item, scales = "free_y") +
labs(title = "Value of Thiram Measurement Comparison by State (2021)",
x = "State",
y = "Total Value") +
theme_minimal(base_size = 13) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
strip.text = element_text(face = "bold")
)
ggplot(thiram_2023, aes(x = State, y = Value, fill = State)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Category + Item, scales = "free_y") +
labs(title = "Value of Thiram Measurement Comparison by State (2023)",
x = "State",
y = "Total Value") +
theme_minimal()
# Remove intermediate data set
rm(thiram_2021,thiram_2023)
#Follows the same step as captan
#Filter rows form chemical_CA
thiram_CA <- chemical_CA[str_detect(chemical_CA$`Domain Category`, regex("thiram", ignore_case = TRUE)), ]
# Filter rows from chemical_FL
thiram_FL <- chemical_FL[str_detect(chemical_FL$`Domain Category`, regex("thiram", ignore_case = TRUE)), ]
#Get the thiram information data and gather them into one data set
thiram_combined <- rbind(thiram_CA, thiram_FL)
#remove intermediate data set
rm(thiram_CA)
rm(thiram_FL)
#Table of Comparison of different year by same state
thiram <- thiram_combined |> group_by(Category, Item, State, Year) |> count(Value)
print(thiram)
#Rearrange the data for bar chart
thiram_2021 <- thiram[str_detect(thiram$Year, regex("2021", ignore_case = TRUE)), ]
thiram_2023 <- thiram[str_detect(thiram$Year, regex("2023", ignore_case = TRUE)), ]
thiram_2021$Value <- as.numeric(gsub(",", "", thiram_2021$Value))
#Same year, same domain category and item, but different state record comparison
ggplot(thiram_2021, aes(x = State, y = Value, fill = State)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +
geom_text(aes(label = Value),
position = position_dodge(width = 0.9),
vjust = -0.5, size = 3.5) +
facet_wrap(~ Category + Item, scales = "fixed") +
labs(title = "Value of Thiram Measurement Comparison by State (2021)",
x = "State",
y = "Total Value") +
theme_minimal(base_size = 13) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
strip.text = element_text(face = "bold")
)
ggplot(thiram_2023, aes(x = State, y = Value, fill = State)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Category + Item, scales = "free_y") +
labs(title = "Value of Thiram Measurement Comparison by State (2023)",
x = "State",
y = "Total Value") +
theme_minimal()
# Remove intermediate data set
rm(thiram_2021,thiram_2023)
#Follows the same step as captan
#Filter rows form chemical_CA
thiram_CA <- chemical_CA[str_detect(chemical_CA$`Domain Category`, regex("thiram", ignore_case = TRUE)), ]
# Filter rows from chemical_FL
thiram_FL <- chemical_FL[str_detect(chemical_FL$`Domain Category`, regex("thiram", ignore_case = TRUE)), ]
#Get the thiram information data and gather them into one data set
thiram_combined <- rbind(thiram_CA, thiram_FL)
#remove intermediate data set
rm(thiram_CA)
rm(thiram_FL)
#Table of Comparison of different year by same state
thiram <- thiram_combined |> group_by(Category, Item, State, Year) |> count(Value)
print(thiram)
#Rearrange the data for bar chart
thiram_2021 <- thiram[str_detect(thiram$Year, regex("2021", ignore_case = TRUE)), ]
thiram_2023 <- thiram[str_detect(thiram$Year, regex("2023", ignore_case = TRUE)), ]
thiram_2021$Value <- as.numeric(gsub(",", "", thiram_2021$Value))
#Same year, same domain category and item, but different state record comparison
ggplot(thiram_2021, aes(x = State, y = Value, fill = State)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +
facet_wrap(~ Category + Item, scales = "free_y") +
labs(title = "Value of Thiram Measurement Comparison by State (2021)",
x = "State",
y = "Total Value") +
theme_minimal(base_size = 13) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
strip.text = element_text(face = "bold")
)
ggplot(thiram_2023, aes(x = State, y = Value, fill = State)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Category + Item, scales = "free_y") +
labs(title = "Value of Thiram Measurement Comparison by State (2023)",
x = "State",
y = "Total Value") +
theme_minimal()
# Remove intermediate data set
rm(thiram_2021,thiram_2023)
#Follows the same step as captan
#Filter rows form chemical_CA
thiram_CA <- chemical_CA[str_detect(chemical_CA$`Domain Category`, regex("thiram", ignore_case = TRUE)), ]
# Filter rows from chemical_FL
thiram_FL <- chemical_FL[str_detect(chemical_FL$`Domain Category`, regex("thiram", ignore_case = TRUE)), ]
#Get the thiram information data and gather them into one data set
thiram_combined <- rbind(thiram_CA, thiram_FL)
#remove intermediate data set
rm(thiram_CA)
rm(thiram_FL)
#Table of Comparison of different year by same state
thiram <- thiram_combined |> group_by(Category, Item, State, Year) |> count(Value)
print(thiram)
#Rearrange the data for bar chart
thiram_2021 <- thiram[str_detect(thiram$Year, regex("2021", ignore_case = TRUE)), ]
thiram_2023 <- thiram[str_detect(thiram$Year, regex("2023", ignore_case = TRUE)), ]
thiram_2021$Value <- as.numeric(gsub(",", "", thiram_2021$Value))
#Same year, same domain category and item, but different state record comparison
ggplot(thiram_2021, aes(x = State, y = Value, fill = State)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Category + Item, scales = "free_y") +
labs(title = "Value of Thiram Measurement Comparison by State (2021)",
x = "State",
y = "Total Value") +
theme_minimal()
ggplot(thiram_2023, aes(x = State, y = Value, fill = State)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Category + Item, scales = "free_y") +
labs(title = "Value of Thiram Measurement Comparison by State (2023)",
x = "State",
y = "Total Value") +
theme_minimal()
# Remove intermediate data set
rm(thiram_2021,thiram_2023)
#Follows the same step as captan
#Filter rows form chemical_CA
thiram_CA <- chemical_CA[str_detect(chemical_CA$`Domain Category`, regex("thiram", ignore_case = TRUE)), ]
# Filter rows from chemical_FL
thiram_FL <- chemical_FL[str_detect(chemical_FL$`Domain Category`, regex("thiram", ignore_case = TRUE)), ]
#Get the thiram information data and gather them into one data set
thiram_combined <- rbind(thiram_CA, thiram_FL)
#remove intermediate data set
rm(thiram_CA)
rm(thiram_FL)
#Table of Comparison of different year by same state
thiram <- thiram_combined |> group_by(Category, Item, State, Year) |> count(Value)
print(thiram)
#Rearrange the data for bar chart
thiram_2021 <- thiram[str_detect(thiram$Year, regex("2021", ignore_case = TRUE)), ]
thiram_2023 <- thiram[str_detect(thiram$Year, regex("2023", ignore_case = TRUE)), ]
#Ensure the value under Value column is numeric, so in graph it can provide the right relationship bar (higher value has a higher bar)
thiram_2021$Value <- as.numeric(gsub(",", "", thiram_2021$Value))
thiram_2023$Value <- as.numeric(gsub(",", "", thiram_2023$Value))
#Same year, same domain category and item, but different state record comparison
ggplot(thiram_2021, aes(x = State, y = Value, fill = State)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Category + Item, scales = "free_y") +
labs(title = "Value of Thiram Measurement Comparison by State (2021)",
x = "State",
y = "Total Value") +
theme_minimal()
ggplot(thiram_2023, aes(x = State, y = Value, fill = State)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Category + Item, scales = "free_y") +
labs(title = "Value of Thiram Measurement Comparison by State (2023)",
x = "State",
y = "Total Value") +
theme_minimal()
# Remove intermediate data set
rm(thiram_2021,thiram_2023)
#Then we can make a bar chart to compare the captan use in California and Florida
#Generate Data from 2021 and 2023
captan_2021 <- captan[str_detect(captan$Year, regex("2021", ignore_case = TRUE)), ]
captan_2023 <- captan[str_detect(captan$Year, regex("2023", ignore_case = TRUE)), ]
#Ensure the value under Value column is numeric, so in graph it can provide the right relationship bar (higher value has a higher bar)
captan_2021$Value <- as.numeric(gsub(",", "", captan_2021$Value))
captan_2023$Value <- as.numeric(gsub(",", "", captan_2023$Value))
#Then we can make the graph (code perfection by chatgpt, for a better visual effect)
ggplot(captan_2021, aes(x = State, y = Value, fill = State)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Category + Item, scales = "free_y") +
labs(title = "Value of Captan Measurement Comparison by State (2021)",
x = "State",
y = "Total Value") +
theme_minimal()
ggplot(captan_2023, aes(x = State, y = Value, fill = State)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Category + Item, scales = "free_y") +
labs(title = "Value of Captan Measurement Comparison by State (2023)",
x = "State",
y = "Total Value") +
theme_minimal()
rm(captan_2021,captan_2023)
#Follows the same step as captan
#Filter rows form chemical_CA
ppz_CA <- chemical_CA[str_detect(chemical_CA$`Domain Category`, regex("thiram", ignore_case = TRUE)), ]
# Filter rows from chemical_FL
ppz_FL <- chemical_FL[str_detect(chemical_FL$`Domain Category`, regex("thiram", ignore_case = TRUE)), ]
#Get the thiram information data and gather them into one data set
ppz_combined <- rbind(ppz_CA, ppz_FL)
#remove intermediate data set
rm(ppz_CA)
rm(ppz_FL)
#Table of Comparison of different year by same state
ppz1 <- ppz_combined |> group_by(Category, Item, State, Year) |> count(Value)
print(thiram)
#Rearrange the data for bar chart
ppz_2021 <- ppz[str_detect(ppz$Year, regex("2021", ignore_case = TRUE)), ]
#Follows the same step as captan
#Filter rows form chemical_CA
ppz_CA <- chemical_CA[str_detect(chemical_CA$`Domain Category`, regex("thiram", ignore_case = TRUE)), ]
# Filter rows from chemical_FL
ppz_FL <- chemical_FL[str_detect(chemical_FL$`Domain Category`, regex("thiram", ignore_case = TRUE)), ]
#Get the thiram information data and gather them into one data set
ppz_combined <- rbind(ppz_CA, ppz_FL)
#remove intermediate data set
rm(ppz_CA)
rm(ppz_FL)
#Table of Comparison of different year by same state
ppz1 <- ppz_combined |> group_by(Category, Item, State, Year) |> count(Value)
print(ppz1)
#Rearrange the data for bar chart
ppz_2021 <- ppz1[str_detect(ppz1$Year, regex("2021", ignore_case = TRUE)), ]
ppz_2023 <- ppz1[str_detect(ppz1$Year, regex("2023", ignore_case = TRUE)), ]
#Ensure the value under Value column is numeric, so in graph it can provide the right relationship bar (higher value has a higher bar)
ppz_2021$Value <- as.numeric(gsub(",", "", ppz_2021$Value))
ppz_2023$Value <- as.numeric(gsub(",", "", ppz_2023$Value))
#Same year, same domain category and item, but different state record comparison (code perfection by chatgpt, for a better visual effect)
ggplot(ppz_2021, aes(x = State, y = Value, fill = State)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Category + Item, scales = "free_y") +
labs(title = "Value of Propiconazole Measurement Comparison by State (2021)",
x = "State",
y = "Total Value") +
theme_minimal()
ggplot(ppz_2023, aes(x = State, y = Value, fill = State)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Category + Item, scales = "free_y") +
labs(title = "Value of Propiconazole Measurement Comparison by State (2023)",
x = "State",
y = "Total Value") +
theme_minimal()
# Remove intermediate data set
rm(ppz_2021,ppz_2023)
install.packages("tinytex")
