---
title: "415_Midterm_Project"
author: "Haoyi Liu"
format: pdf
editor: visual
---



# Before Starting the Project

## Data Set

The csv file named "strawb_mar6.csv", which contains strawberry cultivation data in different states and measurements.

## Main Focus

1.  Pick three chemical treatments used for conventional strawberries in both states and contrast their use. Try to find chemicals with divergent use patterns between the states. Produce, tables, plots, and descriptions of the chemicals, how they are used, and how their use differs between California and Florida.

2.  Compare the production and sales of organic and conventional strawberries and strawberries sold for processing. Show differences in price and volume between California and Florida. How do price, cost, and volume relationships change over the years?

## Data Cleaning

Install packages



```{r}
# install required packages
#install.packages("knitr")
#install.packages("kableExtra")
#install.packages("tidyverse")
#install.packages("stringr")
#install.packages("ggplot2")

```

```{r}
library(knitr)  
library(kableExtra)
library(tidyverse)
library(stringr)
library(ggplot2)
```



Read File (From `USDA-NASS starwberries.qmd`)



```{r}
# Label for the code chunk
#| label: read data - glimpse 

# Read the CSV file "strawb_mar6.csv" into a data frame called 'strawberry'
# - 'col_names = TRUE' tells read_csv to treat the first row as column names
# - 'show_col_types = FALSE' suppresses printing of column type information
strawberry <- read_csv("strawb_mar6.csv", 
                       col_names = TRUE,
                       show_col_types = FALSE)

# Source the file "my_functions.R" to load custom functions defined in that script
source("my_functions.R")
```

```{r}
# remove columns from a data frame that contain only a single unique value
strawb <- strawberry |> drop_one_value_col()
```



Exploring Data



```{r}
#| label: explore strawb data

# assume data is a tibble
# n_show is the number of rows to show

show_unique <- function(data, nrows=10 ){
  # make a tibble items to hold the data to show
  # browser()
  a <- nrows * dim(data)[2]  # number of cells in items
  items <- rep(" ", a) # items will coerce everything to char
  dim(items) <- c(nrows ,dim(data)[2]) # shape items
  items <- as_tibble(items)
  colnames(items) <- colnames(data)
  # browser()
  for(i in 1:dim(data)[2]){

    col_items <- unique(data[,i])
    # row_ex is the number of rows needed 
    # to make the column length conformable with items
    row_ex <- nrows - dim(col_items)[1] 
    if(row_ex >= 0){
      ex_rows <- tibble(rep(" ",row_ex))
      colnames(ex_rows) <- colnames(col_items)
      col_add <- rbind2(col_items, ex_rows)
      
    } else if(row_ex < 0){
      col_add <- col_items[1:10,]
      
    }

    items[,i] <- col_add

  }
  
  return(items)
}

#test <- show_unique(strawb, 10)
```

```{r}
#|label: split strawb into census and survey pieces

strw_census <- strawb |> filter(Program == "CENSUS")

strw_survey <- strawb |> filter(Program == "SURVEY")

nrow(strawb) == (nrow(strw_census) + nrow(strw_survey))
```

```{r}
#| label: examine Census and survey tibbles
#| warning: false

# Remove columns that contain only a single unique value
s_census <- strw_census |> drop_one_value_col(prt_val = TRUE)
s_survey <- strw_survey |> drop_one_value_col(prt_val = TRUE)

# Preview up to 10 unique values per column in each data set
unique_cen <- s_census |> show_unique(nrows = 10)
unique_sur <- s_survey |> show_unique(nrows = 10)

# Drop redundant or unnecessary Data
strw_census <- s_census |> select(-`State ANSI`)

# Remove 'State ANSI', 'Week Ending', and 'Period' for Data Cleaning
strw_survey <- s_survey |> select(-`State ANSI`, -`Week Ending`, -Period)

# Removing intermediate and temporary data set
rm(s_census, s_survey, strawberry, items)
```



## Strawberry Growth Location



```{r}
# Starberries' grown place :)
state_all <- strawb |> distinct(State)
state_all1 <- strawb |> group_by(State) |> count()

# Improved bar plot
ggplot(state_all1, aes(x = reorder(State, -n), y = n)) +
  geom_bar(stat = "identity", fill = "lightgreen", color = "black") +
  labs(
    title = "Strawberry Production by State",
    x = "State",
    y = "Number of Records"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    plot.title = element_text(face = "bold", hjust = 0.5)
  )
```

```{r}
# Show unique values in the 'Domain' column from both datasets
unique(strw_census$Domain)
unique(strw_survey$Domain)
```



# Part 1: Chemical Analysis

## Gather Chemical Information Data



```{r}
#Select all the rows that contains chemical use information
chemical <- strw_survey[str_detect(strw_survey$`Domain Category`, regex("chemical", ignore_case = TRUE)),] 

#Taking only CA and FL state data of chemical usage
chemical_CA <- chemical[chemical$State == "CALIFORNIA", ]
chemical_FL <- chemical[chemical$State == "FLORIDA", ]
print(chemical_CA)
print(chemical_FL)
rm(chemical)

```



In the first question, the three chemical picked from all the possible chemical is captan, thiram, propiconazole

## Chemical 1: Captan



```{r}
# First we check the use of Captan
# Use library of stringr functions to select the captan information
# Filter rows from chemical_CA (code from R studio stringr cheat sheet)
captan_CA <- chemical_CA[str_detect(chemical_CA$`Domain Category`, regex("CAPTAN", ignore_case = TRUE)), ]

# Filter rows from chemical_FL
captan_FL <- chemical_FL[str_detect(chemical_FL$`Domain Category`, regex("CAPTAN", ignore_case = TRUE)), ]

captan_combined <- rbind(captan_CA, captan_FL)

rm(captan_CA)
rm(captan_FL)

print(captan_combined)
# Now we get the table of captan use data in both California and Florida
```

```{r}
# now we start to reorganize the data in the order of category at first, Item for the second, and state and year


captan <- captan_combined |> group_by(Category, Item, State, Year) |> count(Value)

print(captan)
# This table  directly shows the transition of captan use from year 2021 to 2023 in each state
```

```{r}
#Then we can make a bar chart to compare the captan use in California and Florida

#Generate Data from 2021 and 2023
captan_2021 <- captan[str_detect(captan$Year, regex("2021", ignore_case = TRUE)), ]
captan_2023 <- captan[str_detect(captan$Year, regex("2023", ignore_case = TRUE)), ]

#Ensure the value under Value column is numeric, so in graph it can provide the correct relationship bar (higher value has a higher bar)
captan_2021$Value <- as.numeric(gsub(",", "", captan_2021$Value))
captan_2023$Value <- as.numeric(gsub(",", "", captan_2023$Value))

#Then we can make the graph (code perfection by chatgpt, for a better visual effect)
ggplot(captan_2021, aes(x = State, y = Value, fill = State)) +
  geom_bar(stat = "identity",
           position = position_dodge(width = 0.9),
           width = 0.3) +
  geom_text(aes(label = round(Value, 1)),
            position = position_dodge(width = 0.9),
            vjust = -0.2, size = 3, fontface = "bold") +
  facet_wrap(~ Category + Item, scales = "free_y", ncol = 3) +
  scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
  labs(title = "Captan Use in Strawberry Production by State (2021)",
       x = NULL,
       y = "Total Value") +
  theme_minimal(base_size = 9) +
  theme(
    strip.text = element_text(size = 8, face = "bold"),
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.text.y = element_text(size = 7),
    plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
    panel.spacing = unit(0.4, "lines"),
    legend.position = "none"
  )


ggplot(captan_2023, aes(x = State, y = Value, fill = State)) +
  geom_bar(stat = "identity",
           position = position_dodge(width = 0.9),
           width = 0.3) +
  geom_text(aes(label = round(Value, 1)),
            position = position_dodge(width = 0.9),
            vjust = -0.2, size = 3, fontface = "bold") +
  facet_wrap(~ Category + Item, scales = "free_y", ncol = 3) +
  scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
  labs(title = "Captan Use in Strawberry Production by State (2023)",
       x = NULL,
       y = "Total Value") +
  theme_minimal(base_size = 9) +
  theme(
    strip.text = element_text(size = 8, face = "bold"),
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.text.y = element_text(size = 7),
    plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
    panel.spacing = unit(0.4, "lines"),
    legend.position = "none"
  )

#Remove intermediate Data set
rm(captan_2021,captan_2023)
```



From the graph of 2021, California uses the fungicide that contains captan (a certified carcinogenic chemical) more than Florida in general. However, when we look up into other measurement, the average detection of captan use in California is less than Florida. This is because California Strawberry Production Firm is larger than Florida in size.

In 2023, There are some changes in the data. The measure in lb/acre/year and measure in number of California firm is higher than Florida firm, meaning that California uses captan fungicide more often per year, and the average number that detected captan is higher than Florida.

## Chemical 2: Thiram



```{r}
#Follows the same step as captan
#Filter rows form chemical_CA
thiram_CA <- chemical_CA[str_detect(chemical_CA$`Domain Category`, regex("THIRAM", ignore_case = TRUE)), ]

# Filter rows from chemical_FL
thiram_FL <- chemical_FL[str_detect(chemical_FL$`Domain Category`, regex("THIRAM", ignore_case = TRUE)), ]

#Get the thiram information data and gather them into one data set
thiram_combined <- rbind(thiram_CA, thiram_FL)

#remove intermediate data set
rm(thiram_CA)
rm(thiram_FL)

#Table of Comparison of different year by same state
thiram <- thiram_combined |> group_by(Category, Item, State, Year) |> count(Value)

print(thiram)

#Rearrange the data for bar chart
thiram_2021 <- thiram[str_detect(thiram$Year, regex("2021", ignore_case = TRUE)), ]
thiram_2023 <- thiram[str_detect(thiram$Year, regex("2023", ignore_case = TRUE)), ]

#Ensure the value under Value column is numeric, so in graph it can provide the right relationship bar (higher value has a higher bar)
thiram_2021$Value <- as.numeric(gsub(",", "", thiram_2021$Value))
thiram_2023$Value <- as.numeric(gsub(",", "", thiram_2023$Value))
#Same year, same domain category and item, but different state record comparison (code perfection by chatgpt, for a better visual effect)

ggplot(thiram_2021, aes(x = State, y = Value, fill = State)) +
  geom_bar(stat = "identity",
           position = position_dodge(width = 0.9),
           width = 0.3) +
  geom_text(aes(label = round(Value, 1)),
            position = position_dodge(width = 0.9),
            vjust = -0.2, size = 3, fontface = "bold") +
  facet_wrap(~ Category + Item, scales = "free_y", ncol = 3) +
  scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
  labs(title = "Thiram Use in Strawberry Production by State (2021)",
       x = NULL,
       y = "Total Value") +
  theme_minimal(base_size = 9) +
  theme(
    strip.text = element_text(size = 8, face = "bold"),
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.text.y = element_text(size = 7),
    plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
    panel.spacing = unit(0.4, "lines"),
    legend.position = "none"
  )

ggplot(thiram_2023, aes(x = State, y = Value, fill = State)) +
  geom_bar(stat = "identity",
           position = position_dodge(width = 0.9),
           width = 0.3) +
  geom_text(aes(label = round(Value, 1)),
            position = position_dodge(width = 0.9),
            vjust = -0.2, size = 3, fontface = "bold") +
  facet_wrap(~ Category + Item, scales = "free_y", ncol = 3) +
  scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
  labs(title = "Thiram Use in Strawberry Production by State (2023)",
       x = NULL,
       y = "Total Value") +
  theme_minimal(base_size = 9) +
  theme(
    strip.text = element_text(size = 8, face = "bold"),
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.text.y = element_text(size = 7),
    plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
    panel.spacing = unit(0.4, "lines"),
    legend.position = "none"
  )





# Remove intermediate data set
rm(thiram_2021,thiram_2023)

```



From the Graph of 2021, we can see that Thiram use in Florida is higher than California in all the aspect, meaning that Florida firms uses chemical product that contains thiram higher in quantity and frequency.

From the Graph of 2023, California is using thiram included product more than Florida, leading to a higher bar compared to Florida in 4 measurement. However, in number Florida is still a little bit higher than California

## Chemical 3: Novaluron



```{r}
#Follows the same step as captan
#Filter rows form chemical_CA
nov_CA <- chemical_CA[str_detect(chemical_CA$`Domain Category`, regex("NOVALURON", 
                                                                      ignore_case = TRUE)), ]

# Filter rows from chemical_FL
nov_FL <- chemical_FL[str_detect(chemical_FL$`Domain Category`, regex("NOVALURON", 
                                                                      ignore_case = TRUE)), ]

#Get the thiram information data and gather them into one data set
nov_combined <- rbind(nov_CA, nov_FL)

#remove intermediate data set
rm(nov_CA)
rm(nov_FL)

#Table of Comparison of different year by same state
nov <- nov_combined |> group_by(Category, Item, State, Year) |> count(Value)

print(nov)

#Rearrange the data for bar chart
nov_2021 <- nov[str_detect(nov$Year, regex("2021", ignore_case = TRUE)), ]
nov_2023 <- nov[str_detect(nov$Year, regex("2023", ignore_case = TRUE)), ]

#Ensure the value under Value column is numeric, so in graph it can provide the right relationship bar (higher value has a higher bar)
nov_2021$Value <- as.numeric(gsub(",", "", nov_2021$Value))
nov_2023$Value <- as.numeric(gsub(",", "", nov_2023$Value))
#Same year, same domain category and item, but different state record comparison (code perfection by chatgpt, for a better visualization)

ggplot(nov_2021, aes(x = State, y = Value, fill = State)) +
  geom_bar(stat = "identity",
           position = position_dodge(width = 0.9),
           width = 0.3) +
  geom_text(aes(label = round(Value, 1)),
            position = position_dodge(width = 0.9),
            vjust = -0.2, size = 3, fontface = "bold") +
  facet_wrap(~ Category + Item, scales = "free_y", ncol = 3) +
  scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
  labs(title = "NOVALURON Use in Strawberry Production by State (2021)",
       x = NULL,
       y = "Total Value") +
  theme_minimal(base_size = 9) +
  theme(
    strip.text = element_text(size = 8, face = "bold"),
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.text.y = element_text(size = 7),
    plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
    panel.spacing = unit(0.4, "lines"),
    legend.position = "none"
  )

ggplot(nov_2023, aes(x = State, y = Value, fill = State)) +
  geom_bar(stat = "identity",
           position = position_dodge(width = 0.9),
           width = 0.3) +
  geom_text(aes(label = round(Value, 1)),
            position = position_dodge(width = 0.9),
            vjust = -0.2, size = 3, fontface = "bold") +
  facet_wrap(~ Category + Item, scales = "free_y", ncol = 3) +
  scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
  labs(title = "NOVALURON Use in Strawberry Production by State (2023)",
       x = NULL,
       y = "Total Value") +
  theme_minimal(base_size = 9) +
  theme(
    strip.text = element_text(size = 8, face = "bold"),
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.text.y = element_text(size = 7),
    plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
    panel.spacing = unit(0.4, "lines"),
    legend.position = "none"
  )


# Remove intermediate data set
rm(nov_2021,nov_2023)
```



Novaluron is a kind of chemical that have a negative environmental impact.

From the graph of 2021, we can see California uses Novaluron treatment more than Florida in total. However, Florida uses novaluron more often per year and slightly higher in numbers and area bearing.

From the graph of 2023, we can see California still uses Novaluron more than Florida in total, and since the total quantity of california increases a lot. The other per capita measurement is higher than Florida, except measured in area bearing. It means more percentage of the Florida strawberry is treated with novaluron compare to California.

# Part 2: Business Analysis



```{r}
# recall that organic information is and sales stuff is all in census data
org_info <- strw_census[str_detect(strw_census$Category, regex("ORGANIC", 
                                                                      ignore_case = TRUE)), ]
conv_info <- strw_census[!str_detect(strw_census$Category, regex("ORGANIC", 
                                                                      ignore_case = TRUE)), ]
# filter the data by state
org_CA <- org_info[str_detect(org_info$State, regex("CALIFORNIA", ignore_case = TRUE)), ]
org_FL <- org_info[str_detect(org_info$State, regex("FLORIDA", ignore_case = TRUE)), ]
conv_CA <- conv_info[str_detect(conv_info$State, regex("CALIFORNIA", ignore_case = TRUE)), ]
conv_FL <- conv_info[str_detect(conv_info$State, regex("FLORIDA", ignore_case = TRUE)), ]

#remove the intermediate data set
rm(org_info)
rm(conv_info)

#after this, we need to select the data that we want to compare and put them in the same data set for graphing

org_CA1 <- org_CA[str_detect(org_info$Domain, regex("TOTAL", ignore_case = TRUE)), ]
org_FL1 <- org_FL[str_detect(org_info$Domain, regex("TOTAL", ignore_case = TRUE)), ]
conv_CA1 <- conv_CA[str_detect(conv_info$Domain, regex("TOTAL", ignore_case = TRUE)), ]
conv_FL1 <- conv_FL[str_detect(conv_info$Domain, regex("TOTAL", ignore_case = TRUE)), ]


```

